// <auto-generated />
using System;
using CareAssit.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareAssit.Migrations
{
    [DbContext(typeof(CareAssitDbContext))]
    [Migration("20231213042939_New Migration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CareAssit.Models.Domain.Claim", b =>
                {
                    b.Property<Guid>("Claim_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Claim_Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("DateOfService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceCompant_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Invoice_Amount")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Invoice_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status2")
                        .HasColumnType("int");

                    b.HasKey("Claim_Id");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.HealthProvider", b =>
                {
                    b.Property<Guid>("Health_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelathProvider_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Health_Id");

                    b.ToTable("HealthProviders");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.InsuranceCompany", b =>
                {
                    b.Property<Guid>("InsuranceCompany_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsuranceCompany_Id");

                    b.ToTable("InsuranceCompanies");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.InsurancePlan", b =>
                {
                    b.Property<Guid>("InsurancePlan_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InsuranceCompany_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Insurance_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insurance_Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insurance_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insurance_Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsurancePlan_Id");

                    b.ToTable("InsurancePlans");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.Invoice", b =>
                {
                    b.Property<Guid>("Invoice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Consultation_Fee")
                        .HasColumnType("int");

                    b.Property<int>("Diag_Scan_Fee")
                        .HasColumnType("int");

                    b.Property<int>("Diag_Tests_Fee")
                        .HasColumnType("int");

                    b.Property<string>("DueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<int>("Presc_Medication")
                        .HasColumnType("int");

                    b.Property<Guid?>("Request_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<int>("Total_Amount")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Invoice_Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.Request", b =>
                {
                    b.Property<Guid>("Request_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Health_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InsurancePlan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("status1")
                        .HasColumnType("int");

                    b.HasKey("Request_Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.SignUp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SignUps");
                });

            modelBuilder.Entity("CareAssit.Models.Domain.User", b =>
                {
                    b.Property<Guid>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Blood_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
